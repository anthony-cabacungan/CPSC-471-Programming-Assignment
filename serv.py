# python serv.py <PORTNUMBER>

import socket
import sys
import os

serverFolder = "serverFiles/"

def send_data(sock, data):
    sock.sendall(data.encode())


def receive_data(sock):
    return sock.recv(1024).decode()


# TODO: implement functions
def ftp_get(sock, file_name):
    # downloads file <file name> from the server
    try:
        with open(serverFolder + file_name, 'r') as f:
            content = f.read()
        
        dataSize = str(len(content))
        while len(dataSize) < 10:
            dataSize = "0" + dataSize
        send_data(sock,dataSize)
        send_data(sock,content)
    except FileNotFoundError:
        send_data(sock, "File not found")


def ftp_put(sock, file_name):
    # uploads file <file name> to the server
    file_size_data = sock.recv(10).decode()
    print(file_size_data)

    try:
        file_size = int(file_size_data)
        print(f"File size: {file_size}")
    except ValueError:
        print(f"Received invalid file size: {file_size_data}")
        return

    if file_size > 0:
        # Download file <file name> from the server
        content = sock.recv(file_size)
        with open(serverFolder+file_name, 'wb') as f:
            f.write(content)
        print(f"Downloaded {file_name}")
    else:
        print("File not found or empty")



def ftp_ls(sock):
    # lists files on the server
    files = ', '.join(os.listdir(serverFolder))
    files_size = str(len(files))
    while len(files_size) < 10:
        files_size = "0" + files_size
    
    send_data(sock, files_size)
    send_data(sock, files)

# creates a eohemral port for the client to connect to
def create_ephemeral_Port(clientSock):
    ephemeralPort = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    ephemeralPort.settimeout(60)
    ephemeralPort.bind(('',0))
    ephemeralPort.listen(1)
    try:
        portNumber = ephemeralPort.getsockname()[1]
        print("ephermeral port is : " + str(portNumber))
        clientSock.sendall(str(portNumber).encode())

        ephemeralPort, addr = ephemeralPort.accept()    
        print("ephermeral port accepted connection from", addr)
    except:
        print("fail")
    return(ephemeralPort)

# TODO: input validation / error handling wherever needed
def main():
    if len(sys.argv) != 2:
        print("Usage: python serv.py <PORTNUMBER>")
        sys.exit()

    serverPort = int(sys.argv[1])

    # create sockets
    controlSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # bind sockets, dataSocket will use ephemeral port generated by
    controlSocket.bind(('', serverPort))
    # dataSocket.bind(('',0))
    controlSocket.listen(1)

    print("Waiting for a connection...")
    while True:
        try:
            clientSock, addr = controlSocket.accept()
            print("Accepted connection from", addr)

            while True:
                command = receive_data(clientSock)
                if not command:
                    break
                action, _, file_name = command.partition(' ')
                if action == 'GET':
                    data_socket = create_ephemeral_Port(clientSock)
                    ftp_get(data_socket, file_name)
                elif action == 'PUT':
                    data_socket = create_ephemeral_Port(clientSock)
                    ftp_put(data_socket, file_name)
                    data_socket.close()
                elif action == 'LS':
                    data_socket = create_ephemeral_Port(clientSock)
                    ftp_ls(data_socket)
                    data_socket.close()
                elif action == 'QUIT':
                    break
        except Exception as e:
            print(f"Error: {e}")
        finally:
            clientSock.close()



if __name__ == "__main__":
    main()
